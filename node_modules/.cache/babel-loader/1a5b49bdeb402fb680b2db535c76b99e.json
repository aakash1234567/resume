{"ast":null,"code":"import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { k as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectCards(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        activeIndex = swiper.activeIndex,\n        rtl = swiper.rtlTranslate;\n    var params = swiper.params.cardsEffect;\n    var _swiper$touchEventsDa = swiper.touchEventsData,\n        startTranslate = _swiper$touchEventsDa.startTranslate,\n        isTouched = _swiper$touchEventsDa.isTouched;\n    var currentTranslate = rtl ? -swiper.translate : swiper.translate;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slideEl = slides[i];\n      var slideProgress = slideEl.progress;\n      var progress = Math.min(Math.max(slideProgress, -4), 4);\n      var offset = slideEl.swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = \"translateX(\".concat(swiper.minTranslate(), \"px)\");\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var tY = 0;\n      var tZ = -100 * Math.abs(progress);\n      var scale = 1;\n      var rotate = -params.perSlideRotate * progress;\n      var tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px \").concat(rtl ? '-' : '+', \" (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px \").concat(rtl ? '-' : '+', \" (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n\n      if (!swiper.isHorizontal()) {\n        var prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      /* eslint-disable */\n\n      var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rtl ? -rotate : rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        var shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n\n        if (!shadowEl) {\n          shadowEl = createShadow('cards', slideEl);\n        }\n\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformElements = swiper.slides.map(function (slideEl) {\n      return getSlideTransformEl(slideEl);\n    });\n    transformElements.forEach(function (el) {\n      el.style.transitionDuration = \"\".concat(duration, \"ms\");\n      el.querySelectorAll('.swiper-slide-shadow').forEach(function (shadowEl) {\n        shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformElements: transformElements\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}\n\nexport { EffectCards as default };","map":{"version":3,"names":["c","createShadow","e","effectInit","effectTarget","effectVirtualTransitionEnd","k","getSlideTransformEl","EffectCards","_ref","swiper","extendParams","on","cardsEffect","slideShadows","rotate","perSlideRotate","perSlideOffset","setTranslate","slides","activeIndex","rtl","rtlTranslate","params","touchEventsData","startTranslate","isTouched","currentTranslate","translate","i","length","slideEl","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","wrapperEl","style","transform","minTranslate","tX","tY","tZ","abs","scale","tXAdd","slideIndex","virtual","enabled","from","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","shadowEl","querySelector","opacity","zIndex","round","targetEl","setTransition","duration","transformElements","map","forEach","el","transitionDuration","querySelectorAll","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate","default"],"sources":["/home/runner/work/resume/resume/node_modules/swiper/modules/effect-cards.mjs"],"sourcesContent":["import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { k as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = rtl ? -swiper.translate : swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n\n      /* eslint-disable */\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rtl ? -rotate : rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow('cards', slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectCards as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}